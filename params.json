{"name":"Cb-ctt solver","tagline":"Curriculum-based course timetabling solver; uses Tabu Search or Simulated Annealing","body":"CB-CTT_Solver\r\n=============\r\n\r\nCurriculum-based course timetabling solver; uses Tabu Search or Simulated Annealing\r\n\r\n\r\nThe validator was compiled using Visual Studio 2012; it might not work on all configurations of Windows.\r\nIn case the validator does not work, it needs to be recompiled using the included validator.cc source code file.\r\n\r\nThe solver was implemented in and requires an installation of Python 3.\r\n\r\nThe solver is started by executing the Main.py script found in the solver folder.\r\nThe user is then asked to choose a dataset (0 for the test dataset and 1 for the comp dataset),\r\nto choose a test instance (a number between 1-4 when the test dataset was chosen, 1-21 when the comp\r\ndataset was chosen or 0 to select the toy instance) and to input the maximum runtime of the solver in seconds.\r\n\r\nExample:\r\n\"Which dataset?\">>>1\r\n\"Which problem instance?\">>>5\r\n\"Maximum runtime?\">>>200\r\n\r\nselects the comp dataset, instance 5 from the comp dataset and lets the solver run for 200 seconds.\r\n\r\nFurther settings can be made by overwriting the default values in the initialisation.py script.\r\n\r\nThe solution timetables produced by the solver are saved to the folder \"Solutions\" in the solver folder.\r\n\r\nA detailed description of the program as well as a theoretical background to the university course timetabling\r\nproblem is given in the thesis paper: \"Metaheuristic algorithms for the automated timetabling of university courses.pdf\"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}